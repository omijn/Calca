/*Equal Operator Error Handler Code
        int equalOperatorErrorCounter = 0;
        if (equation.equals("")) {
            return;
        }
        for (int j = 0; j < equation.length(); ++j) {
            switch (equation.charAt(j)) {
                case 'x':
                case '/':
                case '+':
                case '-':
                    if (j == equation.length() - 1) {
                        displayButtonValue("clear");
                        return;

                    }
                    break;
                case '.':
                    if ((j == 0 && equation.charAt(1) == '\0') || ((j == equation.length() - 1))) {
                        if (j == equation.length() - 1) {
                            switch (equation.charAt(equation.length() - 2)) {
                                case '1':
                                case '2':
                                case '3':
                                case '4':
                                case '5':
                                case '6':
                                case '7':
                                case '8':
                                case '9':
                                case '0':
                                    continue;
                            }
                        }
                        displayButtonValue("clear");
                        return;
                    }
                case '1':
                case '2':
                case '3':
                case '4':
                case '5':
                case '6':
                case '7':
                case '8':
                case '9':
                case '0':
                    ++equalOperatorErrorCounter;
                    if (j == equation.length() - 1 && equalOperatorErrorCounter == equation.length()) {
                        displayButtonValue("clear");
                        return;
                    }


            }

        }*/

